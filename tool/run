#/bin/bash
# This script will run the deSQLer on the given test benchmark

usage() { echo "Usage: $0 [-t <bench|test>] [-f <file>] [-c <ser|es>] [-s <int>] [-a <auto:int>]" 1>&2; exit 1; }
rm src/*.opt
while getopts ":t:f:c:s:a:" o; do
    case "${o}" in
        t)
            t=${OPTARG}
            ;;
        f)
            f=${OPTARG}
            ;;
        c)
            c=${OPTARG}
            ;;
        s)
            s=${OPTARG}
            ;;
				a)  
						a=${OPTARG}
						;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))
# screen the input args
echo ">> ${t}"
echo ">> ${f}"
echo ">> correctness criterion = ${c}"
echo ">> maximum cycle length = ${s}"
echo '-------------------------------'

#initialize
touch z3-encoding.smt2
rm *.smt2
rm src/desqler/constants*.*
rm z3*.output

# VERIFY AGAINST MANUALLY CRAFTED ASSIGMENTS
if [ -z "$a" ]; then
	# update the config file
	if [ $c == 'ser' ]; then
		sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
	else
		sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
	fi
	sed -i '' "s/cl/$s/" src/desqler/constants.ml 

	# compile the tool
	cd src 
	make localclean
	make world 
	cd ../ 
	
	# run the tool on the requested file
	./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml 

	# run z3 on the generated file
	time z3 z3-encoding.smt2 > z3.output
	head -3 z3.output



# AUTOMATICALLY DETERMINE THE OPTIMAL ASSIGNMENT
else
	#######################
	# single PSI iterations
  #######################
	iter=$(($a + 1))
	for i in $( eval echo {2..$iter} )
	do
		num=$(($i - 1))
		# update the config file
		# clean-up per iteration
		rm src/desqler/constants*.*
		touch z3-encoding.smt2
		rm z3-encoding.smt2 
		if [ $c == 'ser' ]; then
			sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
		else
			sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
		fi
		sed -i '' "s/cl/$s/" src/desqler/constants.ml 
		tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/PSI/$i" | tr '^' '\n' > src/desqler/temp
		mv src/desqler/temp  src/desqler/constants.ml
		sed -i '' "s/isol/EC/g" src/desqler/constants.ml
		# compile with the modified configuration
		cd src
		make localclean 
		make world 
		cd ../
	  # run the tool on the requested file
	  ./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null
    
		# run z3 and create the result file
		echo '==================================================' >> z3.output
		echo "Test Number $num:" >> z3.output
		echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
		time z3 z3-encoding.smt2 >> z3.output
		echo '--------------------------------------------------\n\n' >> z3.output
	done
	#######################
	# single SER iterations
  #######################
	if [ $a -gt 1 ]; then
	iter=$(($a + 1))
	for i in $( eval echo {2..$iter} )
	do
		num=$(($i - 1 + $a))
		# update the config file
		# clean-up per iteration
		rm src/desqler/constants*.*
		touch z3-encoding.smt2
		rm z3-encoding.smt2 
		if [ $c == 'ser' ]; then
			sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
		else
			sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
		fi
		sed -i '' "s/cl/$s/" src/desqler/constants.ml 
		tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$i" | tr '^' '\n' > src/desqler/temp
		mv src/desqler/temp  src/desqler/constants.ml
		sed -i '' "s/isol/EC/g" src/desqler/constants.ml
		# compile with the modified configuration
		cd src
		make localclean 
		make world 
		cd ../
	  # run the tool on the requested file
	  ./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null
    
		# run z3 and create the result file
		echo '==================================================' >> z3.output
		echo "Test Number $num:" >> z3.output
		echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
		time z3 z3-encoding.smt2 >> z3.output
		echo '--------------------------------------------------\n\n' >> z3.output
	done
  else
        rm src/desqler/constants*.*
      touch z3-encoding.smt2
      rm z3-encoding.smt2
      if [ $c == 'ser' ]; then
        sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      else
        sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      fi
      sed -i '' "s/cl/$s/" src/desqler/constants.ml
      tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/g" | tr '^' '\n' > src/desqler/temp
      mv src/desqler/temp  src/desqler/constants.ml
      # compile with the modified configuration
      cd src
      make localclean
      make world
      cd ../
      # run the tool on the requested file
      ./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null

      # run z3 and create the result file
      echo '==================================================' >> z3.output
      echo "Test Number $num:" >> z3.output
      echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
      time z3 z3-encoding.smt2 >> z3.output
      echo '--------------------------------------------------\n\n' >> z3.output
  fi
	

	#######################
	# two SER+SER iterations
  #######################
	if [ $a -gt 2 ]; then
	iter=$(($a + 1))
	for i in $( eval echo {2..$a} )
	do
		num=$(($i - 1 + $a))
		# update the config file
		# clean-up per iteration
		for j in $( eval echo {$i..$a} )
		do
			rm src/desqler/constants*.*
			touch z3-encoding.smt2
			rm z3-encoding.smt2 
			if [ $c == 'ser' ]; then
				sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
			else
				sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
			fi
			sed -i '' "s/cl/$s/" src/desqler/constants.ml 
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$i" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$j" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			sed -i '' "s/isol/EC/g" src/desqler/constants.ml
			# compile with the modified configuration
			cd src
			make localclean 
			make world 
			cd ../
	  	# run the tool on the requested file
	  	./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null
    
			# run z3 and create the result file
			echo '==================================================' >> z3.output
			echo "Test Number $num:" >> z3.output
			echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
			time z3 z3-encoding.smt2 >> z3.output
			echo '--------------------------------------------------\n\n' >> z3.output
		done
	done
  else
        rm src/desqler/constants*.*
      touch z3-encoding.smt2
      rm z3-encoding.smt2
      if [ $c == 'ser' ]; then
        sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      else
        sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      fi
      sed -i '' "s/cl/$s/" src/desqler/constants.ml
      tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/g" | tr '^' '\n' > src/desqler/temp
      mv src/desqler/temp  src/desqler/constants.ml
      # compile with the modified configuration
      cd src
      make localclean
      make world
      cd ../
      # run the tool on the requested file
      ./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null

      # run z3 and create the result file
      echo '==================================================' >> z3.output
      echo "Test Number $num:" >> z3.output
      echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
      time z3 z3-encoding.smt2 >> z3.output
      echo '--------------------------------------------------\n\n' >> z3.output
  fi


	#######################
	# three SER+SER+SER iterations
  #######################
	if [ $a -gt 3 ]; then
	iter=$(($a + 1))
	for i in $( eval echo {2..$(($a - 1))} )
	do
		num=$(($i - 1 + $a))
		# update the config file
		# clean-up per iteration
		for j in $( eval echo {$i..$(($a - 1))} )
		do	
		for k in $( eval echo {$j..$(($a - 1))} )
		do
			rm src/desqler/constants*.*
			touch z3-encoding.smt2
			rm z3-encoding.smt2 
			if [ $c == 'ser' ]; then
				sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
			else
				sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
			fi
			sed -i '' "s/cl/$s/" src/desqler/constants.ml 
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$i" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$j" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$k" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			sed -i '' "s/isol/EC/g" src/desqler/constants.ml
			# compile with the modified configuration
			cd src
			make localclean 
			make world 
			cd ../
	  	# run the tool on the requested file
	  	./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null
    
			# run z3 and create the result file
			echo '==================================================' >> z3.output
			echo "Test Number $num:" >> z3.output
			echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
			time z3 z3-encoding.smt2 >> z3.output
			echo '--------------------------------------------------\n\n' >> z3.output
		done
		done
	done
  else
        rm src/desqler/constants*.*
      touch z3-encoding.smt2
      rm z3-encoding.smt2
      if [ $c == 'ser' ]; then
        sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      else
        sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      fi
      sed -i '' "s/cl/$s/" src/desqler/constants.ml
      tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/g" | tr '^' '\n' > src/desqler/temp
      mv src/desqler/temp  src/desqler/constants.ml
      # compile with the modified configuration
      cd src
      make localclean
      make world
      cd ../
      # run the tool on the requested file
      ./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null

      # run z3 and create the result file
      echo '==================================================' >> z3.output
      echo "Test Number $num:" >> z3.output
      echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
      time z3 z3-encoding.smt2 >> z3.output
      echo '--------------------------------------------------\n\n' >> z3.output
  fi
	
	#######################
	# four SER+SER+SER+SER iterations
  #######################
	if [ $a -gt 4 ]; then
	iter=$(($a + 1))
	for i in $( eval echo {2..$(($a - 2))} )
	do
		num=$(($i - 1 + $a))
		# update the config file
		# clean-up per iteration
		for j in $( eval echo {$i..$(($a - 2))} )
		do	
		for k in $( eval echo {$j..$(($a - 2))} )
		do
		for l in $( eval echo {$k..$(($a - 2))} )
		do
			rm src/desqler/constants*.*
			touch z3-encoding.smt2
			rm z3-encoding.smt2 
			if [ $c == 'ser' ]; then
				sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
			else
				sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
			fi
			sed -i '' "s/cl/$s/" src/desqler/constants.ml 
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$i" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$j" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$k" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$l" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			sed -i '' "s/isol/EC/g" src/desqler/constants.ml
			# compile with the modified configuration
			cd src
			make localclean 
			make world 
			cd ../
	  	# run the tool on the requested file
	  	./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null
    
			# run z3 and create the result file
			echo '==================================================' >> z3.output
			echo "Test Number $num:" >> z3.output
			echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
			time z3 z3-encoding.smt2 >> z3.output
			echo '--------------------------------------------------\n\n' >> z3.output
		done
		done
	done
	done
	  else
        rm src/desqler/constants*.*
      touch z3-encoding.smt2
      rm z3-encoding.smt2
      if [ $c == 'ser' ]; then
        sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      else
        sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
      fi
      sed -i '' "s/cl/$s/" src/desqler/constants.ml
      tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/g" | tr '^' '\n' > src/desqler/temp
      mv src/desqler/temp  src/desqler/constants.ml
      # compile with the modified configuration
      cd src
      make localclean
      make world
      cd ../
      # run the tool on the requested file
      ./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null

      # run z3 and create the result file
      echo '==================================================' >> z3.output
      echo "Test Number $num:" >> z3.output
      echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
      time z3 z3-encoding.smt2 >> z3.output
      echo '--------------------------------------------------\n\n' >> z3.output
  fi


	
	if [ $a -gt 5 ]; then
	#######################
	# five SER+SER+SER+SER+SER iterations
  #######################
	iter=$(($a + 1))
	for i in $( eval echo {2..$(($a - 1))} )
	do
		num=$(($i - 1 + $a))
		# update the config file
		# clean-up per iteration
		for j in $( eval echo {$i..$(($a - 1))} )
		do	
		for k in $( eval echo {$j..$(($a - 1))} )
		do
		for l in $( eval echo {$k..$(($a - 1))} )
		do
		for m in $( eval echo {$l..$(($a - 1))} )
		do
			rm src/desqler/constants*.*
			touch z3-encoding.smt2
			rm z3-encoding.smt2 
			if [ $c == 'ser' ]; then
				sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
			else
				sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
			fi
			sed -i '' "s/cl/$s/" src/desqler/constants.ml 
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$i" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$j" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$k" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$l" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/$m" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			sed -i '' "s/isol/EC/g" src/desqler/constants.ml
			# compile with the modified configuration
			cd src
			make localclean 
			make world 
			cd ../
	  	# run the tool on the requested file
	  	./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null
    
			# run z3 and create the result file
			echo '==================================================' >> z3.output
			echo "Test Number $num:" >> z3.output
			echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
			time z3 z3-encoding.smt2 >> z3.output
			echo '--------------------------------------------------\n\n' >> z3.output
		done
		done
	done
	done
	done
	else
				rm src/desqler/constants*.*
			touch z3-encoding.smt2
			rm z3-encoding.smt2 
			if [ $c == 'ser' ]; then
				sed  "s/corr/SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml 
			else
				sed  "s/corr/EVENTUAL_SERIALIZABILITY/" $t/$f/constants_template.ml  > src/desqler/constants.ml
			fi
			sed -i '' "s/cl/$s/" src/desqler/constants.ml 
			tr '\n' '^' < src/desqler/constants.ml | sed "s/isol/SER/g" | tr '^' '\n' > src/desqler/temp
			mv src/desqler/temp  src/desqler/constants.ml
			# compile with the modified configuration
			cd src
			make localclean 
			make world 
			cd ../
	  	# run the tool on the requested file
	  	./bin/deSQLer.opt -w -20 -c ./$t/$f/$f.ml > /dev/null
    
			# run z3 and create the result file
			echo '==================================================' >> z3.output
			echo "Test Number $num:" >> z3.output
			echo '--------------------------------------------------' >> z3.output
		cat  src/desqler/constants.ml | tail -$(($a + 3)) | head -$(($a+2)) >> z3.output
			time z3 z3-encoding.smt2 >> z3.output
			echo '--------------------------------------------------\n\n' >> z3.output
	fi		
	

fi






#clean up








